// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSCRUCTOR
}

model User {
  id       String   @id @default(cuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(STUDENT)

  questions Question[]
  answers   Answer[]
  comments  Comment[]

  @@map("users")
}

model Question {
  id            String  @id @default(cuid())
  title         String
  slug          String  @unique
  content       String
  authorId      String  @map("author_id")
  bestAnsewerId String? @unique @map("best_answer_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author     User    @relation(fields: [authorId], references: [id])
  bestAnswer Answer? @relation("bestAnswer", fields: [bestAnsewerId], references: [id])

  answers    Answer[]
  comment    Comment[]
  attachment Attachment[]

  @@map("questions")
}

model Answer {
  id         String @id @default(cuid())
  content    String
  authorId   String @map("author_id")
  questionId String @map("question_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author       User         @relation(fields: [authorId], references: [id])
  bestAnswerOn Question?    @relation("bestAnswer")
  question     Question     @relation(fields: [questionId], references: [id])
  comment      Comment[]
  attachment   Attachment[]

  @@map("answers")
}

model Comment {
  id         String  @id @default(cuid())
  content    String
  authorId   String  @map("author_id")
  questionId String? @map("question_id")
  answerId   String? @map("answer_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author   User      @relation(fields: [authorId], references: [id])
  question Question? @relation(fields: [questionId], references: [id])
  answer   Answer?   @relation(fields: [answerId], references: [id])

  @@map("comments")
}

model Attachment {
  id         String  @id @default(cuid())
  title      String
  url        String
  questionId String? @map("question_id")
  answerId   String? @map("answer_id")

  question Question? @relation(fields: [questionId], references: [id])
  answer   Answer?   @relation(fields: [answerId], references: [id])

  @@map("attachments")
}
